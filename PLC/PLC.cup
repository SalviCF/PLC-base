import java_cup.runtime.*;


action code	{:
				/* Variables */
				public static int varTemp = 0;

				/* Methods */
				private static String newVarTemp() {
					return "$t" + (varTemp++);
				}

				private String genTAC(String tac){
					String temp = newVarTemp(); 
					PLC.out.println(temp + tac); 
					return temp;
				}

			:}

// TERMINALS

terminal PRINT;
terminal OP, CP;
terminal ADD, SUB, MUL, DIV, UMIN, SC;
terminal String NUM, ID;

// NON TERMINALS

non terminal Object sent_list, sentence;
non terminal String expr;

// PRECEDENCES

precedence left ADD, SUB;
precedence left DIV, MUL;
precedence right UMIN;

// GRAMMAR

sent_list		::= sentence
				| 	sent_list sentence	
;

sentence		::= expr:e SC	
						{:
							RESULT = e;
						:}
				| 	PRINT OP expr:e CP SC	
						{: 
							PLC.out.println("print " + e + ";"); 
						:}
;


expr			::= expr:e1 ADD expr:e2
						{:
							RESULT = genTAC(" = " + e1 + " + " + e2 + ";");
						:}
				|	expr:e1 SUB expr:e2
						{:
							RESULT = genTAC(" = " + e1 + " - " + e2 + ";");
						:}
				|	expr:e1 MUL expr:e2
						{:
							RESULT = genTAC(" = " + e1 + " * " + e2 + ";");
						:}
				|	expr:e1 DIV expr:e2
						{:
							RESULT = genTAC(" = " + e1 + " / " + e2 + ";");
						:} 
				|	OP expr:e CP
						{: 
							RESULT = e;
						:}
				|	SUB expr:e
						{:
							RESULT = genTAC(" = -" + e + ";");
						:} %prec UMIN
				| 	ID:id	
						{: 
							RESULT = id; 
						:}
				| 	NUM:num	
						{: 
							RESULT = num; 
						:}
;
